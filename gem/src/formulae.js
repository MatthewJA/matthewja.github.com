// Generated by CoffeeScript 1.7.1
(function() {
  define(["Equation"], function(Eq) {
    var formulae;
    formulae = {
      "volume-density": {
        name: "Density (volume)",
        keywords: ["density", "volume", "mass"],
        equation: function() {
          return new Eq("ρ", "V/m");
        }
      },
      "force": {
        name: "Newton's 2nd Law",
        keywords: ["force", "newton's", "law", "2nd", "mass", "acceleration"],
        equation: function() {
          return new Eq("F", "m*a");
        }
      },
      "velocity": {
        name: "Velocity",
        keywords: ["velocity", "speed", "distance", "displacement", "position", "location", "time"],
        equation: function() {
          return new Eq("v", "x/t");
        }
      },
      "acceleration": {
        name: "Acceleration",
        keywords: ["acceleration", "velocity", "speed", "time"],
        equation: function() {
          return new Eq("a", "v/t");
        }
      },
      "jerk": {
        name: "Jerk",
        keywords: ["jerk", "acceleration", "time"],
        equation: function() {
          return new Eq("j", "a/t");
        }
      },
      "angular-velocity": {
        name: "Angular velocity",
        keywords: ["angular", "velocity", "rotation", "time", "radians", "angle"],
        equation: function() {
          return new Eq("ω", "θ/t");
        }
      },
      "angular-acceleration": {
        name: "Angular acceleration",
        keywords: ["angular", "acceleration", "velocity", "rotation", "time", "radians", "angle"],
        equation: function() {
          return new Eq("α", "ω/t");
        }
      },
      "momentum": {
        name: "Momentum",
        keywords: ["momentum", "mass", "velocity", "inertia"],
        equation: function() {
          return new Eq("p", "m*v");
        }
      },
      "impulse": {
        name: "Impulse",
        keywords: ["impulse", "change", "momentum", "in"],
        equation: function() {
          return new Eq("Δp", "p2 - p1");
        }
      },
      "angular-momentum": {
        name: "Angular momentum",
        keywords: ["angular", "angle", "momentum", "radians", "rotation", "distance", "perpendicular"],
        equation: function() {
          return new Eq("L", "dp*p");
        }
      },
      "torque": {
        name: "Torque",
        keywords: ["torque", "angular", "force", "distance", "moment", "perpendicular"],
        equation: function() {
          return new Eq("τ", "dp*F");
        }
      },
      "angular-impulse": {
        name: "Angular impulse",
        keywords: ["angular", "angle", "radians", "impulse", "momentum"],
        equation: function() {
          return new Eq("ΔL", "L2 - L1");
        }
      }
    };
    return {
      getEquation: function(name) {
        if (name in formulae) {
          return formulae[name].equation();
        } else {
          throw new Error("No formula called " + name + " exists.");
        }
      },
      getAllFormulaNames: function() {
        var formula, names;
        names = [];
        for (formula in formulae) {
          names.push(formula);
        }
        return names;
      },
      getName: function(name) {
        if (name in formulae) {
          return formulae[name].name;
        } else {
          throw new Error("No formula called " + name + " exists.");
        }
      },
      getKeywords: function(name) {
        if (name in formulae) {
          return formulae[name].keywords;
        } else {
          throw new Error("No formula called " + name + " exists.");
        }
      }
    };
  });

}).call(this);
