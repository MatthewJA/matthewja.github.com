// Generated by CoffeeScript 1.6.3
(function() {
  define(["jquery", "frontend/setEventHandlers", "frontend/settings", "backend/expressionIndex", "require", "frontend/setExpressionAddendums", "frontend/expressionToString"], function($, setEventHandlers, settings, expressionIndex, require, setExpressionAddendums, expressionToString) {
    var addExpressionToWhiteboard;
    addExpressionToWhiteboard = function(expression, expressionID, position) {
      var expressionDiv, html, padding, variables;
      if (position == null) {
        position = null;
      }
      if (settings.get("mathJaxEnabled")) {
        html = expressionToString(expression, expressionID);
        expressionDiv = $(html);
        $("#whiteboard-panel").append(expressionDiv);
        MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
        MathJax.Hub.Queue(function() {
          var padding;
          require(["frontend/setEventHandlers"], function(setEventHandlers) {
            return setEventHandlers(expressionDiv);
          });
          if (position == null) {
            padding = 10;
            position = {
              top: Math.floor(Math.random() * Math.max(0, $("#whiteboard-panel").height() - expressionDiv.height() - padding) + padding + $("#whiteboard-panel").offset().top),
              left: Math.floor(Math.random() * Math.max(0, $("#whiteboard-panel").width() - expressionDiv.width() - padding) + padding + $("#whiteboard-panel").offset().left)
            };
          }
          return $(expressionDiv).css({
            top: "" + position.top + "px",
            left: "" + position.left + "px",
            position: "absolute"
          });
        });
        return variables = expression.getAllVariables();
      } else {
        html = expressionToString(expression, expressionID);
        expressionDiv = $(html);
        $("#whiteboard-panel").append(expressionDiv);
        require(["frontend/setEventHandlers"], function(setEventHandlers) {
          return setEventHandlers(expressionDiv);
        });
        if (position == null) {
          padding = 10;
          position = {
            top: Math.floor(Math.random() * Math.max(0, $("#whiteboard-panel").height() - expressionDiv.height() - padding) + padding + $("#whiteboard-panel").offset().top),
            left: Math.floor(Math.random() * Math.max(0, $("#whiteboard-panel").width() - expressionDiv.width() - padding) + padding + $("#whiteboard-panel").offset().left)
          };
        }
        return $(expressionDiv).css({
          top: "" + position.top + "px",
          left: "" + position.left + "px",
          position: "absolute"
        });
      }
    };
    return function(expression, units) {
      var expressionID;
      if (units == null) {
        units = null;
      }
      expressionID = expressionIndex.add(expression);
      setExpressionAddendums(expression);
      expression._gem_units = units;
      addExpressionToWhiteboard(expression, expressionID);
      return expressionID;
    };
  });

}).call(this);
