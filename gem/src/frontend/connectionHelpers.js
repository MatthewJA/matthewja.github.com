// Generated by CoffeeScript 1.6.3
(function() {
  define(["jsPlumb", "frontend/settings", "jquery"], function(jsPlumb, settings, $) {
    return {
      repaintVariables: function(element) {
        var variable, _i, _len, _ref, _results;
        if (element == null) {
          element = null;
        }
        if (element != null) {
          _ref = element.find(".variable");
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            variable = _ref[_i];
            _results.push(jsPlumb.repaint(variable));
          }
          return _results;
        } else {
          return jsPlumb.repaintEverything();
        }
      },
      connect: function(source, target) {
        return jsPlumb.connect({
          source: source,
          target: target
        }, settings.get("connectionSettings"));
      },
      setupJsPlumb: function() {
        return jsPlumb.ready(function() {
          jsPlumb.Defaults.Container = $("#connection-space");
          return $(window).resize(function() {
            return jsPlumb.repaintEverything();
          });
        });
      },
      setVisibleBetween: function(source, target, visibility) {
        var connection, _i, _j, _len, _len1, _ref, _ref1, _results, _results1;
        if (source != null) {
          _ref = jsPlumb.getConnections({
            source: source,
            target: target
          });
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            connection = _ref[_i];
            _results.push(connection.setVisible(visibility));
          }
          return _results;
        } else {
          _ref1 = jsPlumb.getConnections({
            target: target
          });
          _results1 = [];
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            connection = _ref1[_j];
            _results1.push(connection.setVisible(visibility));
          }
          return _results1;
        }
      }
    };
  });

}).call(this);
