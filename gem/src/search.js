// Generated by CoffeeScript 1.6.3
(function() {
  define(["jquery", "formulae", "render", "addEquation"], function($, formulae, render, addEquation) {
    var drawFormulae, formulaSearch, setup;
    drawFormulae = function(names) {
      var formula, li, name, title, _i, _len;
      $("#searchresults").empty();
      for (_i = 0, _len = names.length; _i < _len; _i++) {
        name = names[_i];
        formula = formulae.getEquation(name);
        title = formulae.getName(name);
        li = $("<li>");
        li.addClass("searchresult");
        li.html("<math>" + (formula.toMathML()) + "</math>");
        li.attr("title", title);
        $("#searchresults").append(li);
        li.tooltip();
        li.attr("data-formula-name", name);
        li.click(function(event) {
          return addEquation(formulae.getEquation($(event.target).closest(".searchresult").attr("data-formula-name"), true));
        });
      }
      return render.math();
    };
    setup = function() {
      $("#searchbar").val("");
      return $("#searchbar").on("change keyup paste", (function() {
        var fs, keywords, q;
        q = $("#searchbar").val();
        keywords = q.split(/\s+/);
        fs = formulaSearch(keywords);
        return drawFormulae(fs);
      }));
    };
    formulaSearch = function(keywords) {
      var formulaMatches, fword, fwords, keyword, matchfound, name, names, toReturn, _i, _j, _k, _len, _len1, _len2;
      names = formulae.getAllFormulaNames();
      toReturn = [];
      for (_i = 0, _len = names.length; _i < _len; _i++) {
        name = names[_i];
        fwords = formulae.getKeywords(name);
        formulaMatches = true;
        for (_j = 0, _len1 = keywords.length; _j < _len1; _j++) {
          keyword = keywords[_j];
          matchfound = false;
          for (_k = 0, _len2 = fwords.length; _k < _len2; _k++) {
            fword = fwords[_k];
            if (fword.lastIndexOf(keyword, 0) === 0) {
              matchfound = true;
              break;
            }
          }
          if (!matchfound) {
            formulaMatches = false;
            break;
          }
        }
        if (formulaMatches) {
          toReturn.push(name);
        }
      }
      return toReturn;
    };
    return {
      drawFormulae: drawFormulae,
      formulaSearch: formulaSearch,
      setup: setup
    };
  });

}).call(this);
