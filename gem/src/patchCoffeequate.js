// Generated by CoffeeScript 1.7.1
(function() {
  define(["coffeequate"], function(CQ) {
    return function() {
      var Add, Constant, Expression, Mul, Pow, SymbolicConstant, Uncertainty, Variable, expr;
      expr = CQ("x + y");
      Expression = expr.constructor;
      Add = expr.expr.constructor;
      expr = CQ("x * y");
      Mul = expr.expr.constructor;
      expr = CQ("x ** y");
      Pow = expr.expr.constructor;
      expr = CQ("x");
      Variable = expr.expr.constructor;
      expr = CQ("1");
      Constant = expr.expr.constructor;
      expr = CQ("x").getUncertainty();
      Uncertainty = expr.expr.constructor;
      expr = CQ("\\G");
      SymbolicConstant = expr.expr.constructor;
      Expression.prototype.mapOverVariables = function(fun) {
        return new Expression(this.expr.mapOverVariables(fun));
      };
      return Add.prototype.mapOverVariables = function(fun) {
        var child, mappedChildren, _i, _len, _results;
        mappedChildren = [];
        _results = [];
        for (_i = 0, _len = children.length; _i < _len; _i++) {
          child = children[_i];
          _results.push(mappedChildren.push(child.mapOverVariables(fun)));
        }
        return _results;
      };
    };
  });

}).call(this);
